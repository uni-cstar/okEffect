plugins {
    id 'com.android.library'
    id 'com.vanniktech.maven.publish'
}

android {
    namespace 'unics.okeffect'
    compileSdk 33

    defaultConfig {
        minSdk 19
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

}

dependencies {

    //自动生成的类
//    annotationProcessor project(path: ':okEffectCompiler')
//    compileOnly project(path: ':okEffectAnnotation')
    annotationProcessor 'io.github.uni-cstar:okEffectCompiler:1.0.1'
    compileOnly 'io.github.uni-cstar:okEffectAnnotation:1.0.1'

//    implementation 'androidx.core:core-ktx:1.8.0'
//    implementation 'androidx.appcompat:appcompat:1.6.1'
//    implementation 'com.google.android.material:material:1.9.0'
    compileOnly 'androidx.annotation:annotation:1.2.0'
    compileOnly 'androidx.appcompat:appcompat:1.2.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

tasks.withType(Javadoc) {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}